{"version":3,"file":"vue-upload-component.part.js","sources":["../src/InputFile.vue","../src/FileUpload.vue","../src/index.js"],"sourcesContent":["<template>\r\n  <input\r\n    type=\"file\"\r\n    :name=\"$parent.name\"\r\n    :id=\"$parent.inputId || $parent.name\"\r\n    :accept=\"$parent.accept\"\r\n    @change=\"change\"\r\n    :webkitdirectory=\"$parent.directory && $parent.features.directory\"\r\n    :directory=\"$parent.directory && $parent.features.directory\"\r\n    :multiple=\"$parent.multiple && $parent.features.html5\"\r\n  />\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    change(e) {\r\n      this.$destroy()\r\n      this.$parent.addInputFile(e.target)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <label :class=\"className\">\r\n    <slot></slot>\r\n    <input-file></input-file>\r\n  </label>\r\n</template>\r\n<script>\r\nimport InputFile from './InputFile.vue'\r\n\r\nexport default {\r\n  name: 'file-upload',\r\n\r\n  components: {\r\n    InputFile,\r\n  },\r\n\r\n  props: {\r\n    inputId: {\r\n      type: String,\r\n    },\r\n\r\n    name: {\r\n      type: String,\r\n      default: 'file',\r\n    },\r\n\r\n    accept: {\r\n      type: String,\r\n    },\r\n\r\n    multiple: {\r\n      type: Boolean,\r\n    },\r\n\r\n    maximum: {\r\n      type: Number,\r\n      default() {\r\n        return this.multiple ? 0 : 1\r\n      }\r\n    },\r\n\r\n    addIndex: {\r\n      type: [Boolean, Number],\r\n    },\r\n\r\n    directory: {\r\n      type: Boolean,\r\n    },\r\n\r\n    postAction: {\r\n      type: String,\r\n    },\r\n\r\n    headers: {\r\n      type: Object,\r\n      default: Object,\r\n    },\r\n\r\n    data: {\r\n      type: Object,\r\n      default: Object,\r\n    },\r\n\r\n    timeout: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n\r\n    drop: {\r\n      default: false,\r\n    },\r\n\r\n    dropDirectory: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    size: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    extensions: {\r\n      default: Array,\r\n    },\r\n\r\n    value: {\r\n      type: Array,\r\n      default: Array,\r\n    },\r\n\r\n    thread: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      files: this.value,\r\n      features: {\r\n        html5: true,\r\n        directory: false,\r\n        drag: false,\r\n      },\r\n\r\n      active: false,\r\n      dropActive: false,\r\n\r\n      uploading: 0,\r\n\r\n      destroy: false,\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    let input = document.createElement('input')\r\n    input.type = 'file'\r\n    input.multiple = true\r\n\r\n    // html5\r\n    if (window.FormData && input.files) {\r\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\r\n        this.features.directory = true\r\n      }\r\n\r\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\r\n        this.features.drop = true\r\n      }\r\n    } else {\r\n      this.features.html5 = false\r\n    }\r\n\r\n    // files\r\n    this.maps = {}\r\n\r\n    this.$nextTick(function () {\r\n      if (this.$parent) {\r\n        this.$parent.$forceUpdate()\r\n      }\r\n\r\n      this.watchDrop(this.drop)\r\n    })\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.destroy = true\r\n    this.active = false\r\n  },\r\n\r\n  computed: {\r\n    uploaded() {\r\n      let file\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        file = this.files[i]\r\n        if (file.fileObject && !file.error && !file.success) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    },\r\n\r\n    className() {\r\n      return []\r\n    }\r\n  },\r\n\r\n\r\n  watch: {\r\n    active(active) {\r\n      this.watchActive(active)\r\n    },\r\n\r\n    dropActive() {\r\n      if (this.$parent) {\r\n        this.$parent.$forceUpdate()\r\n      }\r\n    },\r\n\r\n    drop(value) {\r\n      this.watchDrop(value)\r\n    },\r\n\r\n    value(files) {\r\n      if (this.files === files) {\r\n        return\r\n      }\r\n      this.files = files\r\n\r\n      let oldMaps = this.maps\r\n\r\n      // Maps\r\n      this.maps = {}\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        let file = this.files[i]\r\n        this.maps[file.id] = file\r\n      }\r\n\r\n      // add, update\r\n      for (let key in this.maps) {\r\n        let newFile = this.maps[key]\r\n        let oldFile = oldMaps[key]\r\n        if (newFile !== oldFile) {\r\n          this.emitFile(newFile, oldFile)\r\n        }\r\n      }\r\n\r\n      // Delete\r\n      for (let key in oldMaps) {\r\n        if (!this.maps[key]) {\r\n          this.emitFile(undefined, oldMaps[key])\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n\r\n    // Clear - Empty the file list\r\n    clear() {\r\n      if (this.files.length) {\r\n        let files = this.files\r\n        this.files = []\r\n\r\n        this.maps = {}\r\n\r\n        this.emitInput()\r\n        for (let i = 0; i < files.length; i++) {\r\n          this.emitFile(undefined, files[i])\r\n        }\r\n      }\r\n      return true\r\n    },\r\n\r\n    // Get - Get file by Id\r\n    get(id) {\r\n      if (!id) {\r\n        return false\r\n      }\r\n\r\n      if (typeof id === 'object') {\r\n        return this.maps[id.id] || false\r\n      }\r\n\r\n      return this.maps[id] || false\r\n    },\r\n\r\n    // Add file - Generate new Id if not provided\r\n    add(_files, index = this.addIndex) {\r\n      let files = _files\r\n      let isArray = files instanceof Array\r\n\r\n      if (!isArray) {\r\n        files = [files]\r\n      }\r\n\r\n      let addFiles = []\r\n      for (let i = 0; i < files.length; i++) {\r\n        let file = files[i]\r\n        if (this.features.html5 && file instanceof Blob) {\r\n          file = {\r\n            file,\r\n            size: file.size,\r\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\r\n            type: file.type,\r\n          }\r\n        }\r\n        let fileObject = false\r\n        if (file.fileObject === false) {\r\n          // false\r\n        } else if (file.fileObject) {\r\n          fileObject = true\r\n        } else if (typeof Element !== 'undefined' && file.el instanceof Element) {\r\n          fileObject = true\r\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\r\n          fileObject = true\r\n        }\r\n        if (fileObject) {\r\n          file = Object.assign({\r\n            fileObject: true,\r\n            size: -1,\r\n            name: 'Filename',\r\n            type: '',\r\n            active: false,\r\n            error: '',\r\n            success: false,\r\n            putAction: this.putAction,\r\n            postAction: this.postAction,\r\n            timeout: this.timeout,\r\n          }, file, {\r\n            response: {},\r\n\r\n            progress: '0.00',\r\n            speed: 0,\r\n          })\r\n\r\n          file.data = Object.assign({}, this.data, file.data ? file.data : {})\r\n\r\n          file.headers = Object.assign({}, this.headers, file.headers ? file.headers : {})\r\n        }\r\n\r\n        if (!file.id) {\r\n          file.id = Math.random().toString(36).substr(2)\r\n        }\r\n\r\n        if (this.emitFilter(file, undefined)) {\r\n          continue\r\n        }\r\n\r\n        if (this.maximum > 1 && (addFiles.length + this.files.length) >= this.maximum) {\r\n          break\r\n        }\r\n\r\n        addFiles.push(file)\r\n\r\n        if (this.maximum === 1) {\r\n          break\r\n        }\r\n      }\r\n\r\n      if (!addFiles.length) {\r\n        return false\r\n      }\r\n\r\n      if (this.maximum === 1) {\r\n        this.clear()\r\n      }\r\n\r\n      let newFiles\r\n      if (index === true || index === 0) {\r\n        newFiles = addFiles.concat(this.files)\r\n      } else if (index) {\r\n        newFiles = addFiles.concat([])\r\n        newFiles.splice(index, 0, addFiles)\r\n      } else {\r\n        newFiles = this.files.concat(addFiles)\r\n      }\r\n\r\n      this.files = newFiles\r\n\r\n      for (let i = 0; i < addFiles.length; i++) {\r\n        let file = addFiles[i]\r\n        this.maps[file.id] = file\r\n      }\r\n\r\n      this.emitInput()\r\n      for (let i = 0; i < addFiles.length; i++) {\r\n        this.emitFile(addFiles[i], undefined)\r\n      }\r\n\r\n      return isArray ? addFiles : addFiles[0]\r\n    },\r\n\r\n    // InputFile - Add the file selected by <input type = \"file\"> to the upload list\r\n    addInputFile(el) {\r\n      let files = []\r\n      if (el.files) {\r\n        for (let i = 0; i < el.files.length; i++) {\r\n          let file = el.files[i]\r\n          files.push({\r\n            size: file.size,\r\n            name: file.webkitRelativePath || file.relativePath || file.name,\r\n            type: file.type,\r\n            file,\r\n            el\r\n          })\r\n        }\r\n      } else {\r\n        files.push({\r\n          name: el.value.replace(/^.*?([^\\/\\\\\\r\\n]+)$/, '$1'),\r\n          el,\r\n        })\r\n      }\r\n      return this.add(files)\r\n    },\r\n\r\n    // DataTransfer - Add files that are dragged or pasted into the upload list\r\n    addDataTransfer(dataTransfer) {\r\n      let files = []\r\n      if (dataTransfer.items && dataTransfer.items.length) {\r\n        let items = []\r\n        for (let i = 0; i < dataTransfer.items.length; i++) {\r\n          let item = dataTransfer.items[i]\r\n          if (item.getAsEntry) {\r\n            item = item.getAsEntry() || item.getAsFile()\r\n          } else if (item.webkitGetAsEntry) {\r\n            item = item.webkitGetAsEntry() || item.getAsFile()\r\n          } else {\r\n            item = item.getAsFile()\r\n          }\r\n          if (item) {\r\n            items.push(item)\r\n          }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n          let forEach = (i) => {\r\n            let item = items[i]\r\n            if (!item || (this.maximum > 0 && files.length >= this.maximum)) {\r\n              return resolve(this.add(files))\r\n            }\r\n            this.getEntry(item).then(function (results) {\r\n              files.push.apply(files, results)\r\n              forEach(i + 1)\r\n            })\r\n          }\r\n          forEach(0)\r\n        })\r\n      }\r\n\r\n      if (dataTransfer.files.length) {\r\n        for (let i = 0; i < dataTransfer.files.length; i++) {\r\n          files.push(dataTransfer.files[i])\r\n          if (this.maximum > 0 && files.length >= this.maximum) {\r\n            break\r\n          }\r\n        }\r\n        return Promise.resolve(this.add(files))\r\n      }\r\n\r\n      return Promise.resolve([])\r\n    },\r\n\r\n    getEntry(entry, path = '') {\r\n      return new Promise((resolve, reject) => {\r\n        if (entry.isFile) {\r\n          entry.file(function (file) {\r\n            resolve([\r\n              {\r\n                size: file.size,\r\n                name: path + file.name,\r\n                type: file.type,\r\n                file,\r\n              }\r\n            ])\r\n          })\r\n        } else if (entry.isDirectory && this.dropDirectory) {\r\n          let files = []\r\n          let dirReader = entry.createReader()\r\n          let readEntries = () => {\r\n            dirReader.readEntries((entries) => {\r\n              let forEach = (i) => {\r\n                if ((!entries[i] && i === 0) || (this.maximum > 0 && files.length >= this.maximum)) {\r\n                  return resolve(files)\r\n                }\r\n                if (!entries[i]) {\r\n                  return readEntries()\r\n                }\r\n                this.getEntry(entries[i], path + entry.name + '/').then((results) => {\r\n                  files.push.apply(files, results)\r\n                  forEach(i + 1)\r\n                })\r\n              }\r\n              forEach(0)\r\n            })\r\n          }\r\n          readEntries()\r\n        } else {\r\n          resolve([])\r\n        }\r\n      })\r\n    },\r\n\r\n    // Remove a file object\r\n    remove(id) {\r\n      let file = this.get(id)\r\n      if (file) {\r\n        if (this.emitFilter(undefined, file)) {\r\n          return false\r\n        }\r\n        let files = this.files.concat([])\r\n        let index = files.indexOf(file)\r\n        if (index === -1) {\r\n          console.error('remove', file)\r\n          return false\r\n        }\r\n        files.splice(index, 1)\r\n        this.files = files\r\n\r\n        delete this.maps[file.id]\r\n\r\n        this.emitInput()\r\n        this.emitFile(undefined, file)\r\n      }\r\n      return file\r\n    },\r\n\r\n    // Update a file object\r\n    update(id, data) {\r\n      let file = this.get(id)\r\n      if (file) {\r\n        let newFile = Object.assign({}, file, data)\r\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\r\n          newFile.error = 'abort'\r\n        }\r\n\r\n        if (this.emitFilter(newFile, file)) {\r\n          return false\r\n        }\r\n\r\n        let files = this.files.concat([])\r\n        let index = files.indexOf(file)\r\n        if (index === -1) {\r\n          console.error('update', file)\r\n          return false\r\n        }\r\n        files.splice(index, 1, newFile)\r\n        this.files = files\r\n\r\n        delete this.maps[file.id]\r\n        this.maps[newFile.id] = newFile\r\n\r\n        this.emitInput()\r\n        this.emitFile(newFile, file)\r\n        return newFile\r\n      }\r\n      return false\r\n    },\r\n\r\n    emitFilter(newFile, oldFile) {\r\n      let isPrevent = false\r\n      this.$emit('input-filter', newFile, oldFile, function () {\r\n        isPrevent = true\r\n        return isPrevent\r\n      })\r\n      return isPrevent\r\n    },\r\n\r\n    emitFile(newFile, oldFile) {\r\n      this.$emit('input-file', newFile, oldFile)\r\n      if (newFile && newFile.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\r\n        this.uploading++\r\n        this.$nextTick(function () {\r\n          setTimeout(() => {\r\n            this.upload(newFile).then(() => {\r\n              if (newFile && newFile.fileObject) {\r\n                this.update(newFile, {\r\n                  active: false,\r\n                  success: !newFile.error\r\n                })\r\n              }\r\n            }).catch((e) => {\r\n              this.update(newFile, {\r\n                active: false,\r\n                success: false,\r\n                error: e.code || e.error || e.message || e\r\n              })\r\n            })\r\n          }, parseInt(Math.random() * 50 + 50, 10))\r\n        })\r\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\r\n        this.uploading--\r\n      }\r\n\r\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\r\n        this.watchActive(true)\r\n      }\r\n    },\r\n\r\n    emitInput() {\r\n      this.$emit('input', this.files)\r\n    },\r\n\r\n\r\n    // Validate then upload file\r\n    upload(id) {\r\n      let file = this.get(id)\r\n\r\n      // Validate file\r\n      if (!file) {\r\n        return Promise.reject('not_exists')\r\n      }\r\n\r\n      // Validate file object data\r\n      if (!file.fileObject) {\r\n        return Promise.reject('file_object')\r\n      }\r\n\r\n      // Reject if there is an error\r\n      if (file.error) {\r\n        return Promise.reject(file.error)\r\n      }\r\n\r\n      // If the file is already downloaded, don't download-it again\r\n      if (file.success) {\r\n        return Promise.resolve(file)\r\n      }\r\n\r\n      // Validate extensions\r\n      let extensions = this.extensions\r\n      if (extensions && (extensions.length || typeof extensions.length === 'undefined')) {\r\n        if (typeof extensions !== 'object' || !(extensions instanceof RegExp)) {\r\n          if (typeof extensions === 'string') {\r\n            extensions = extensions.split(',').map(value => value.trim()).filter(value => value)\r\n          }\r\n          extensions = new RegExp('\\\\.(' + extensions.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\r\n        }\r\n        if (file.name.search(extensions) === -1) {\r\n          return Promise.reject('extension')\r\n        }\r\n      }\r\n\r\n      // Validate size\r\n      if (this.size > 0 && file.size >= 0 && file.size > this.size) {\r\n        return Promise.reject('size')\r\n      }\r\n\r\n      // Upload with Html5 specs or Html4 if not supported\r\n      if (this.features.html5) {\r\n        return this.uploadHtml5(file)\r\n      }\r\n      return this.uploadHtml4(file)\r\n    },\r\n\r\n    uploadHtml5(file) {\r\n      let form = new window.FormData()\r\n      let value\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\r\n          if (value instanceof File) {\r\n            form.append(key, value, value.name)\r\n          } else {\r\n            form.append(key, JSON.stringify(value))\r\n          }\r\n        } else if (value !== null && value !== undefined) {\r\n          form.append(key, value)\r\n        }\r\n      }\r\n      form.append(this.name, file.file, file.file.filename || file.name)\r\n      let xhr = new XMLHttpRequest()\r\n      xhr.open('POST', file.postAction)\r\n      return this.uploadXhr(xhr, file, form)\r\n    },\r\n\r\n    // HTML5 uploadXMLHttpRequest object\r\n    uploadXhr(xhr, _file, body) {\r\n      let file = _file\r\n      let speedTime = 0\r\n      let speedLoaded = 0\r\n\r\n      xhr.upload.onprogress = (e) => {\r\n        file = this.get(file)\r\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\r\n          return\r\n        }\r\n\r\n        let speedTime2 = Math.round(Date.now() / 1000)\r\n        if (speedTime2 === speedTime) {\r\n          return\r\n        }\r\n        speedTime = speedTime2\r\n\r\n        file = this.update(file, {\r\n          progress: (e.loaded / e.total * 100).toFixed(2),\r\n          speed: e.loaded - speedLoaded,\r\n        })\r\n        speedLoaded = e.loaded\r\n      }\r\n\r\n      let interval = setInterval(() => {\r\n        file = this.get(file)\r\n        if (file && file.fileObject && !file.success && !file.error && file.active) {\r\n          return\r\n        }\r\n\r\n        if (interval) {\r\n          clearInterval(interval)\r\n          interval = false\r\n        }\r\n\r\n        try {\r\n          xhr.abort()\r\n          xhr.timeout = 1\r\n        } catch (e) {\r\n        }\r\n      }, 100)\r\n\r\n      return new Promise((resolve, reject) => {\r\n        let complete\r\n        let fn = (e) => {\r\n          if (complete) {\r\n            return\r\n          }\r\n          complete = true\r\n          if (interval) {\r\n            clearInterval(interval)\r\n            interval = false\r\n          }\r\n\r\n          file = this.get(file)\r\n\r\n          if (!file) {\r\n            return reject('not_exists')\r\n          }\r\n\r\n          if (!file.fileObject) {\r\n            return reject('file_object')\r\n          }\r\n\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          if (!file.active) {\r\n            return reject('abort')\r\n          }\r\n\r\n\r\n          if (file.success) {\r\n            return resolve(file)\r\n          }\r\n\r\n          let data = {}\r\n\r\n          switch (e.type) {\r\n            case 'timeout':\r\n            case 'abort':\r\n              data.error = e.type\r\n              break\r\n            case 'error':\r\n              if (!xhr.status) {\r\n                data.error = 'network'\r\n              } else if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              }\r\n              break\r\n            default:\r\n              if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              } else {\r\n                data.progress = '100.00'\r\n              }\r\n          }\r\n\r\n          if (xhr.responseText) {\r\n            let contentType = xhr.getResponseHeader('Content-Type')\r\n            if (contentType && contentType.indexOf('/json') !== -1) {\r\n              data.response = JSON.parse(xhr.responseText)\r\n            } else {\r\n              data.response = xhr.responseText\r\n            }\r\n          }\r\n\r\n          file = this.update(file, data)\r\n\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          return resolve(file)\r\n        }\r\n\r\n        xhr.onload = fn\r\n        xhr.onerror = fn\r\n        xhr.onabort = fn\r\n        xhr.ontimeout = fn\r\n\r\n        if (file.timeout) {\r\n          xhr.timeout = file.timeout\r\n        }\r\n\r\n        // headers\r\n        for (let key in file.headers) {\r\n          xhr.setRequestHeader(key, file.headers[key])\r\n        }\r\n\r\n        file = this.update(file, { xhr })\r\n\r\n        xhr.send(body)\r\n      })\r\n    },\r\n\r\n    uploadHtml4(_file) {\r\n      let file = _file\r\n      let onKeydown = function (e) {\r\n        if (e.keyCode === 27) {\r\n          e.preventDefault()\r\n        }\r\n      }\r\n\r\n      let iframe = document.createElement('iframe')\r\n      iframe.id = 'upload-iframe-' + file.id\r\n      iframe.name = 'upload-iframe-' + file.id\r\n      iframe.src = 'about:blank'\r\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\r\n\r\n\r\n      let form = document.createElement('form')\r\n\r\n      form.action = file.postAction\r\n\r\n      form.name = 'upload-form-' + file.id\r\n\r\n\r\n      form.setAttribute('method', 'POST')\r\n      form.setAttribute('target', 'upload-iframe-' + file.id)\r\n      form.setAttribute('enctype', 'multipart/form-data')\r\n\r\n      let value\r\n      let input\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\r\n          value = JSON.stringify(value)\r\n        }\r\n        if (value !== null && value !== undefined) {\r\n          input = document.createElement('input')\r\n          input.type = 'hidden'\r\n          input.name = key\r\n          input.value = value\r\n          form.appendChild(input)\r\n        }\r\n      }\r\n      form.appendChild(file.el)\r\n\r\n      document.body.appendChild(iframe).appendChild(form)\r\n\r\n      let getResponseData = function () {\r\n        let doc\r\n        try {\r\n          if (iframe.contentWindow) {\r\n            doc = iframe.contentWindow.document\r\n          }\r\n        } catch (err) {\r\n        }\r\n        if (!doc) {\r\n          try {\r\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\r\n          } catch (err) {\r\n            doc = iframe.document\r\n          }\r\n        }\r\n        if (doc && doc.body) {\r\n          return doc.body.innerHTML\r\n        }\r\n        return null\r\n      }\r\n\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          file = this.update(file, { iframe })\r\n\r\n          // Validate file\r\n          if (!file) {\r\n            return reject('not_exists')\r\n          }\r\n\r\n          let interval = setInterval(() => {\r\n            file = this.get(file)\r\n            if (file && file.fileObject && !file.success && !file.error && file.active) {\r\n              return\r\n            }\r\n\r\n            if (interval) {\r\n              clearInterval(interval)\r\n              interval = false\r\n            }\r\n\r\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\r\n          }, 100)\r\n\r\n\r\n          let complete\r\n          let fn = (e) => {\r\n            if (complete) {\r\n              return\r\n            }\r\n            complete = true\r\n\r\n\r\n            if (interval) {\r\n              clearInterval(interval)\r\n              interval = false\r\n            }\r\n\r\n            document.body.removeEventListener('keydown', onKeydown)\r\n\r\n            file = this.get(file)\r\n\r\n            if (!file) {\r\n              return reject('not_exists')\r\n            }\r\n\r\n            if (!file.fileObject) {\r\n              return reject('file_object')\r\n            }\r\n\r\n            if (file.error) {\r\n              return reject(file.error)\r\n            }\r\n\r\n            if (!file.active) {\r\n              return reject('abort')\r\n            }\r\n\r\n            if (file.success) {\r\n              return resolve(file)\r\n            }\r\n\r\n            let response = getResponseData()\r\n            let data = {}\r\n            switch (e.type) {\r\n              case 'abort':\r\n                data.error = 'abort'\r\n                break\r\n              case 'error':\r\n                if (file.error) {\r\n                  data.error = file.error\r\n                } else if (response === null) {\r\n                  data.error = 'network'\r\n                } else {\r\n                  data.error = 'denied'\r\n                }\r\n                break\r\n              default:\r\n                if (file.error) {\r\n                  data.error = file.error\r\n                } else if (data === null) {\r\n                  data.error = 'network'\r\n                } else {\r\n                  data.progress = '100.00'\r\n                }\r\n            }\r\n\r\n            if (response !== null) {\r\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\r\n                try {\r\n                  response = JSON.parse(response)\r\n                } catch (err) {\r\n                }\r\n              }\r\n              data.response = response\r\n            }\r\n\r\n            file = this.update(file, data)\r\n\r\n            if (file.error) {\r\n              return reject(file.error)\r\n            }\r\n\r\n            return resolve(file)\r\n          }\r\n\r\n          iframe.onload = fn\r\n          iframe.onerror = fn\r\n          iframe.onabort = fn\r\n\r\n          document.body.addEventListener('keydown', onKeydown)\r\n\r\n          form.submit()\r\n        }, 50)\r\n      }).then(function (res) {\r\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\r\n        return res\r\n      }).catch(function (res) {\r\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\r\n        return res\r\n      })\r\n    },\r\n\r\n    watchActive(active) {\r\n      let file\r\n      let index = 0\r\n      while ((file = this.files[index])) {\r\n        index++\r\n        if (!file.fileObject) {\r\n          // Do nothing\r\n        } else if (active && !this.destroy) {\r\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\r\n            break\r\n          }\r\n          if (!file.active && !file.error && !file.success) {\r\n            this.update(file, { active: true })\r\n          }\r\n        } else {\r\n          if (file.active) {\r\n            this.update(file, { active: false })\r\n          }\r\n        }\r\n      }\r\n      if (this.uploading === 0) {\r\n        this.active = false\r\n      }\r\n    },\r\n\r\n    watchDrop(_el) {\r\n      let el = _el\r\n      if (!this.features.drop) {\r\n        return\r\n      }\r\n\r\n      if (this.dropElement) {\r\n        try {\r\n          document.removeEventListener('dragenter', this.onDragenter, false)\r\n          document.removeEventListener('dragleave', this.onDragleave, false)\r\n          document.removeEventListener('drop', this.onDocumentDrop, false)\r\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\r\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\r\n        } catch (e) {\r\n        }\r\n      }\r\n\r\n      if (!el) {\r\n        el = false\r\n      } else if (typeof el === 'string') {\r\n        el = document.querySelector(el) || this.$root.$el.querySelector(el)\r\n      } else if (el === true) {\r\n        el = this.$parent.$el\r\n      }\r\n\r\n      this.dropElement = el\r\n\r\n      if (this.dropElement) {\r\n        document.addEventListener('dragenter', this.onDragenter, false)\r\n        document.addEventListener('dragleave', this.onDragleave, false)\r\n        document.addEventListener('drop', this.onDocumentDrop, false)\r\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\r\n        this.dropElement.addEventListener('drop', this.onDrop, false)\r\n      }\r\n    },\r\n\r\n    onDragenter(e) {\r\n      e.preventDefault()\r\n      if (!this.dropActive) {\r\n        this.dropActive = true\r\n      }\r\n    },\r\n\r\n    onDragleave(e) {\r\n      e.preventDefault()\r\n      if (e.target.nodeName === 'HTML' || (e.screenX === 0 && e.screenY === 0 && !e.fromElement && e.offsetX <= 0)) {\r\n        this.dropActive = false\r\n      }\r\n    },\r\n\r\n    onDragover(e) {\r\n      e.preventDefault()\r\n    },\r\n\r\n    onDocumentDrop() {\r\n      this.dropActive = false\r\n    },\r\n\r\n    onDrop(e) {\r\n      e.preventDefault()\r\n      this.addDataTransfer(e.dataTransfer)\r\n    },\r\n  }\r\n}\r\n</script>\r\n","module.exports = require('./FileUpload.vue')\r\n"],"names":["render","e","$destroy","$parent","addInputFile","target","String","Boolean","Number","multiple","Object","Array","value","input","document","createElement","type","window","FormData","files","webkitdirectory","directory","features","html5","ondrop","drop","maps","$nextTick","$forceUpdate","watchDrop","destroy","active","file","i","length","fileObject","error","success","watchActive","oldMaps","id","key","newFile","oldFile","emitFile","undefined","emitInput","_files","index","addIndex","isArray","addFiles","Blob","size","webkitRelativePath","relativePath","name","Element","el","assign","putAction","postAction","timeout","data","headers","Math","random","toString","substr","emitFilter","maximum","push","clear","newFiles","concat","splice","replace","add","dataTransfer","items","item","getAsEntry","getAsFile","webkitGetAsEntry","Promise","resolve","reject","forEach","getEntry","then","results","apply","entry","path","isFile","isDirectory","dropDirectory","dirReader","createReader","readEntries","entries","get","indexOf","isPrevent","$emit","uploading","upload","update","catch","code","message","parseInt","extensions","RegExp","split","map","trim","filter","join","search","uploadHtml5","uploadHtml4","form","File","append","JSON","stringify","filename","xhr","XMLHttpRequest","open","uploadXhr","_file","body","speedTime","speedLoaded","onprogress","lengthComputable","speedTime2","round","Date","now","loaded","total","toFixed","interval","setInterval","abort","complete","fn","status","progress","responseText","contentType","getResponseHeader","response","parse","onload","onerror","onabort","ontimeout","setRequestHeader","send","onKeydown","keyCode","preventDefault","iframe","src","setAttribute","action","appendChild","getResponseData","doc","contentWindow","err","contentDocument","innerHTML","removeEventListener","addEventListener","submit","res","parentNode","removeChild","thread","_el","dropElement","onDragenter","onDragleave","onDocumentDrop","onDragover","onDrop","querySelector","$root","$el","dropActive","nodeName","screenX","screenY","fromElement","offsetX","addDataTransfer","require$$0"],"mappings":"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"}